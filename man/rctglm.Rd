% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rctglm.R
\name{rctglm}
\alias{rctglm}
\title{Fit GLM and find any estimand (marginal effect) using plug-in estimation with variance estimation using
influence functions}
\usage{
rctglm(
  formula,
  group_indicator,
  family,
  data,
  group_allocation_prob = 1/2,
  estimand_fun = "ate",
  estimand_fun_deriv0 = NULL,
  estimand_fun_deriv1 = NULL,
  ...
)
}
\arguments{
\item{formula}{an object of class \code{"\link[stats]{formula}"} (or one that
    can be coerced to that class): a symbolic description of the
    model to be fitted.  The details of model specification are given
    under \sQuote{Details}.}

\item{group_indicator}{(name of) the variable in data that identifies randomisation groups}

\item{family}{a description of the error distribution and link
    function to be used in the model.  For \code{glm} this can be a
    character string naming a family function, a family function or the
    result of a call to a family function.  For \code{glm.fit} only the
    third option is supported.  (See \code{\link[stats]{family}} for details of
    family functions.)}

\item{data}{an optional data frame, list or environment (or object
    coercible by \code{\link{as.data.frame}} to a data frame) containing
    the variables in the model.  If not found in \code{data}, the
    variables are taken from \code{environment(formula)},
    typically the environment from which \code{glm} is called.}

\item{group_allocation_prob}{a \code{numeric} with the probabiliy of being assigned "group 1" (rather than group 0)}

\item{estimand_fun}{a \code{character} specifying a default estimand function, or \code{function} with
arguments \code{psi0} and \code{psi1} specifying the estimand.}

\item{estimand_fun_deriv0}{a \code{function} specifying the derivative of \code{estimand_fun} wrt. \code{psi0}}

\item{estimand_fun_deriv1}{a \code{function} specifying the derivative of \code{estimand_fun} wrt. \code{psi1}}

\item{...}{Additional arguments passed to \code{\link[stats:glm]{stats::glm()}}}
}
\value{
an \code{rctglm} object
}
\description{
The procedure uses plug-in-estimation and influence functions to perform robust inference of any specified
estimand in the setting of a randomised clinical trial, even in the case of heterogeneous effect of
covariates in randomisation groups.
}
\details{
The procedure assumes the setup of a randomised clinical trial with observations grouped by a binary
\code{group_indicator} variable, allocated randomly with probability \code{group_allocation_prob}. A GLM is
fit and then used to predict the response of all observations in the event that the \code{group_indicator}
is 0 and 1, respectively. Taking means of these predictions prodeuce the \emph{counterfactual means}
\code{psi0} and \code{psi1}, and an estimand \code{r(psi0, psi1)} is calculated using any specified \code{estimand_fun}.

The variance of the estimand is found by taking the variance of the influence function of the estimand.

This method of inference using plug-in estimation and influence functions for the variance produces a
causal estimate of the estimand, as stated by articles XXXX.
}
\section{Estimands}{

As noted in the description, \code{psi0} and \code{psi1} are the counterfactual means found by prediction using
a fitted GLM in the binary groups defined by \code{group_indicator}.

Default estimand functions can be specified via \code{"ate"} (taking the difference \code{psi1 - psi0}) and
\code{"rate_ratio"} (taking the ratio \code{psi1 / psi0})

As a default, the \code{Deriv} package to perform symbolic differentiation to find the derivatives of
the \code{estimand_fun}.
}

\examples{
# Generate some data
n <- 100
x1 <- rnorm (n)
a <- rbinom (n, 1, .5)
b0 <- 1
b1 <- 1.5
b2 <- 2
lin_pred <- b0+b1*x1+b2*a

y_norm <- rnorm(n, mean = lin_pred, sd = 1)
dat_norm <- data.frame(Y = y_norm, X = x1, A = a)

ate <- rctglm(formula = Y ~ .,
              group_indicator = A,
              data = dat_norm,
              family = gaussian(),
              estimand_fun = "ate")
}
