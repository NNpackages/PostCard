% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_collection.R
\name{simulate_collection}
\alias{simulate_collection}
\title{Simulate a collection of pairs of "historical" and "current" RCT data}
\usage{
simulate_collection(
  covariate_model,
  outcome_model,
  hist_covariate_model,
  hist_outcome_model,
  n_sim = 10,
  n_control = 200,
  n_treatment = 300,
  n_hist_control = 5000,
  n_hist_treatment = 100,
  n_test_control = 0,
  n_test_treatment = 0,
  parallel = TRUE,
  workers = future::availableCores() - 1
)
}
\arguments{
\item{covariate_model}{A \code{function} taking arguments \code{n_treat} and \code{n_control} which specifies how to generate covariates (including the treatment variable) in the "current" data}

\item{outcome_model}{A \code{function} taking argument \code{data} (which will be evaluated with the result of \code{covariate_model}) and models the outcome from covariates in the data. Output should be a data set containing a column with the output}

\item{hist_covariate_model}{Same as \code{covariate_model} but specify how to model the covariates in the historical (and historical test) data sets}

\item{hist_outcome_model}{Same as \code{outcome_model} but specify how to model the outcome in the historical (and historical test) data sets}

\item{n_sim}{Number of collections of historical and}

\item{n_control}{Number of patients in current RCT control groups}

\item{n_treatment}{Number of patients in current RCT treatment groups}

\item{n_hist_control}{Number of patients in historical control groups}

\item{n_hist_treatment}{Number of patients in historical treatment groups}

\item{n_test_control}{Additional number of historical control group patients having same distribution as "hist" (if provided, these can be used for preliminary power estimation; see power.est argument for lm.hist)}

\item{n_test_treatment}{Additional number of historical treatment group patients having same distribution as "hist" (if provided, these can be used for preliminary power estimation; see power.est argument for lm.hist)}

\item{parallel}{Logical value. If TRUE the simulations are done using parallelisation using future::plan(future::multicore), which resolves futures asynchronously (in parallel) in separate forked R processes running in the background on the same machine.This is NOT supported on Windows. Reason for not using future::multisession is that this creates and error, probably stemming from a bug in future::multisession.}

\item{workers}{Number of cores to use for parallelisation.}
}
\value{
\code{list} object with \code{n_sim} elements.
Each element in the list contains \verb{$hist} (historical data), \verb{$hist_test} (test data
with same distribution of the historical data), \verb{$rct} (current RCT data).
}
\description{
Provide number of pairs of studies to simulate, the sample sizes in groups of the studies together with functions to model covariates and outcomes in the studies to generate a collection of simulated studies.
}
\examples{
# Nonsense example to showcase you can do whatever you want.

# Define the function to generate covariates and model the outcome
cov_mod <- function(n_treatment, n_control,
                    shape = 2, scale = 1/2) {
 n_tot <- sum(n_treatment, n_control)

 data.frame(a = rgamma(n = n_tot,
                       shape = shape,
                       scale = 1/2),
            b = rnorm(n_tot),
            w = c(rep(0, n_control), rep(1, n_treatment)))
}

out_mod <- function(data, coef = c(2, 1, 3, 1)) {
  if (length(coef) != 4) {
    stop("`coef` argument needs to have length 4 to match dimensions of design matrix")
  }

  X <- stats::model.matrix(
    formula("~ -1 + a*b + w"),
    data = data)

  data.frame(y = X \%*\% coef)
}

# Use the defined functions to simulate your collection of studies
simulate_collection(n_treatment = 50,
                    n_control = 25,
                    n_hist_treatment = 500,
                    n_hist_control = 5000,
                    n_test_treatment = 100,
                    n_test_control = 500,
                    covariate_model = cov_mod,
                    outcome_model = out_mod,
                    hist_covariate_model = cov_mod,
                    hist_outcome_model = out_mod)

}
